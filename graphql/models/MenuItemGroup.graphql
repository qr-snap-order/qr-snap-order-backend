type MenuItemGroup {
    id: ID!

    name: String!

    menuItems: [MenuItem!]!
        @belongsToMany
        @orderBy(column: "id", direction: ASC)
}

extend type Query @guard {
    menuItemGroups: [MenuItemGroup!]! @all @orderBy(column: "id", direction: ASC)

    menuItemGroup(id: ID! @eq @rules(apply: ["required", "uuid"])): MenuItemGroup @find
}

extend type Mutation @guard {
    createMenuItemGroup(
        name: String! @rules(apply: ["required", "string", "max:255"])

        menuItems: [ID!]! @rules(apply: ["required", "uuid"]) @connectSync
    ): MenuItemGroup! @create

    updateMenuItemGroup(
        id: ID! @rules(apply: ["required", "uuid"])

        name: String
            @rules(apply: ["sometimes", "required", "string", "max:255"])

        menuItems: [ID!] @rules(apply: ["required", "uuid"]) @connectSync
    ): MenuItemGroup! @update

    deleteMenuItemGroup(id: ID! @eq @rules(apply: ["required", "uuid"])): MenuItemGroup!
        @delete
}
