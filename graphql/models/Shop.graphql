type Shop {
    id: ID!

    name: String!

    organization_id: ID!

    organization: Organization!

    staffs: [Staff!]! @belongsToMany
}

extend type Query {
    shops(
        organization_id: ID! @eq @rules(apply: ["required", "uuid"])
    ): [Shop!]! @all @orderBy(column: "created_at", direction: DESC) @orderBy(column: "id", direction: DESC)

    shop(
        id: ID! @eq @rules(apply: ["required", "uuid"])
    ): Shop @find
}

extend type Mutation {
    createShop(
        name: String! @rules(apply: ["required", "string", "max:255"])

        organization_id: ID! @rules(apply: ["required", "uuid", "exists:organizations,id"])
    ): Shop @create

    updateShop(
        id: ID! @rules(apply: ["required", "uuid"])

        name: String @rules(apply: ["sometimes", "required", "string", "max:255"])
    ): Shop @update

    deleteShop(
        id: ID! @eq @rules(apply: ["required", "uuid"])
    ): Shop @delete
}
