type ShopGroup {
    id: ID!

    name: String!

    shops: [Shop!]! @belongsToMany @orderBy(column: "id", direction: ASC)
}

extend type Query @guard {
    shopGroups: [ShopGroup!]! @all @orderBy(column: "id", direction: ASC)

    shopGroup(
        id: ID! @eq @rules(apply: ["required", "uuid"])
    ): ShopGroup @find
}

extend type Mutation @guard {
    createShopGroup(
        name: String! @rules(apply: ["required", "string", "max:255"])

        shops: [ID!]! @rules(apply: ["required", "uuid"]) @connectSync
    ): ShopGroup @create

    updateShopGroup(
        id: ID! @rules(apply: ["required", "uuid"])

        name: String @rules(apply: ["sometimes", "required", "string", "max:255"])

        shops: [ID!]! @rules(apply: ["required", "uuid"]) @connectSync
    ): ShopGroup @update

    deleteShopGroup(
        id: ID! @eq @rules(apply: ["required", "uuid"])
    ): ShopGroup @delete
}
